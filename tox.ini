[tox]
envlist = py, lint, fmt

[testenv]
description = run unit tests
deps =
    poetry
allowlist_externals=
    poetry
    pytest
commands_pre =
    poetry install --with dev --no-root
commands =
    pip freeze
    pytest {posargs:tests}

[testenv:fmt]
description = format with pre-commit
commands_pre =
    poetry install --with dev --no-root
deps =
    poetry
commands =
    ./scripts/fmt.sh
allowlist_externals =
    poetry
    ./scripts/fmt.sh

[testenv:lint]
description = lint with pylint
deps =
    poetry
commands_pre =
    poetry install --with dev --no-root
commands = pylint tuning scripts/*.py launcher/*.py tests
allowlist_externals =
    poetry
    pylint

[testenv:build]
description = build wheel
allowlist_externals=
    poetry
deps =
    poetry
commands = poetry build --format wheel
skip_install = True

[testenv:twinecheck]
description = check wheel
commands_pre = []
deps =
    twine
commands = twine check dist/*
skip_install = True

[testenv:coverage]
description = report unit test coverage
allowlist_externals=
    poetry
    coverage
    genbadge
commands_pre =
    poetry install --with dev
commands =
    coverage run --omit='*/_version.py,*/launch_training.py' \
        --source=tuning,launcher \
        --module pytest tests/
    coverage report -m
    coverage xml
    genbadge coverage -s -i coverage.xml
